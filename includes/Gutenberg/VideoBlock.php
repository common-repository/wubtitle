<?php
/**
 * This file implements Video Block.
 *
 * @author     Alessio Catania
 * @since      0.1.0
 * @package    Wubtitle\Gutenberg
 */

namespace Wubtitle\Gutenberg;

use Wubtitle\Loader;

/**
 * This class describes The Gutenberg video block.
 */
class VideoBlock {

	/**
	 * Init class actions
	 *
	 * @return void
	 */
	public function run() {
		add_action( 'enqueue_block_editor_assets', array( $this, 'add_subtitle_button_enqueue' ) );
		add_filter( 'render_block', array( $this, 'video_dynamic_block_render_callback' ), 10, 2 );
	}

	/**
	 * Enqueue script.
	 *
	 * @return void
	 */
	public function add_subtitle_button_enqueue() {
		wp_enqueue_script( 'add_subtitle_button-script', WUBTITLE_URL . 'build/index.js', array( 'wp-compose', 'wp-data', 'wp-element', 'wp-hooks', 'wp-api-fetch', 'wp-components', 'wp-block-editor', 'wp-edit-post', 'wp-i18n' ), WUBTITLE_VER, false );
		wp_set_script_translations( 'add_subtitle_button-script', 'wubtitle', WUBTITLE_DIR . 'languages' );
		wp_localize_script(
			'add_subtitle_button-script',
			'wubtitle_button_object',
			array(
				'ajax_url'  => admin_url( 'admin-ajax.php' ),
				'ajaxnonce' => wp_create_nonce( 'itr_ajax_nonce' ),
				'lang'      => str_replace( '_', '-', get_locale() ),
				'isFree'    => get_option( 'wubtitle_free' ),
				'langExten' => Loader::get( 'helpers' )->get_languages(),
			)
		);
	}

	/**
	 * Dynamic block callback.
	 *
	 * @param string       $block_content standard video block html generated by wordress.
	 * @param array<mixed> $block video attributes (id).
	 * @return string|false
	 */
	public function video_dynamic_block_render_callback( $block_content, $block ) {
		if ( 'core/video' !== $block['blockName'] ) {
			return $block_content;
		}
		wp_enqueue_style( 'wubtitle_test', WUBTITLE_URL . '/assets/css/subtitles.css', array(), WUBTITLE_VER );
		$attributes = $block['attrs'];
		if ( empty( $attributes['id'] ) ) {
			return $block_content;
		}
		$subtitle     = get_post_meta( $attributes['id'], 'wubtitle_subtitle', true );
		$subtitle_src = wp_get_attachment_url( $subtitle );
		$video_src    = wp_get_attachment_url( $attributes['id'] );
		$lang         = Loader::get( 'extented_media_library' )->get_video_language( $attributes['id'] );
		$status       = get_post_meta( $attributes['id'], 'wubtitle_status', true );
		if ( ! $subtitle_src || ! $video_src || 'enabled' !== $status ) {
			return $block_content;
		}
		ob_start();
		?>
		<figure class="wp-block-video">
			<video controls src= "<?php echo esc_html( $video_src ); ?>">
			<track label="<?php echo esc_attr( $lang ); ?>" kind="subtitles" src=" <?php echo esc_html( $subtitle_src ); ?>" default>
			</video>
		</figure>
		<?php
		return ob_get_clean();
	}
}
